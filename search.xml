<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/03/21/1111/"/>
      <url>/2025/03/21/1111/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构一（顺序表sequenceList）</title>
      <link href="/2025/03/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%80%EF%BC%88%E9%A1%BA%E5%BA%8F%E8%A1%A8sequenceList%EF%BC%89/"/>
      <url>/2025/03/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%80%EF%BC%88%E9%A1%BA%E5%BA%8F%E8%A1%A8sequenceList%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="创建一个顺序表实现对顺序表内元素的-——增加（头插-指定位置插入-尾插）-——删除（头删-指定位置删除-尾删）-——遍历顺序表"><a href="#创建一个顺序表实现对顺序表内元素的-——增加（头插-指定位置插入-尾插）-——删除（头删-指定位置删除-尾删）-——遍历顺序表" class="headerlink" title=" 创建一个顺序表实现对顺序表内元素的 ——增加（头插 指定位置插入 尾插） ——删除（头删 指定位置删除 尾删） ——遍历顺序表"></a> 创建一个顺序表实现对顺序表内元素的<br> ——增加（头插 指定位置插入 尾插）<br> ——删除（头删 指定位置删除 尾删）<br> ——遍历顺序表</h2><p>More info: <a href="https://github.com/gybpersist/sequenceList">sequenceList</a></p><h2 id="构造顺序表（sequenceList）"><a href="#构造顺序表（sequenceList）" class="headerlink" title="构造顺序表（sequenceList）"></a>构造顺序表（sequenceList）</h2><h3 id="构造顺序表记录参数-顺序表的首地址-顺序表的容量-顺序表的有效元素的下标"><a href="#构造顺序表记录参数-顺序表的首地址-顺序表的容量-顺序表的有效元素的下标" class="headerlink" title="构造顺序表记录参数(顺序表的首地址 顺序表的容量 顺序表的有效元素的下标)"></a>构造顺序表记录参数(顺序表的首地址 顺序表的容量 顺序表的有效元素的下标)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">typedef struct sequenceList &#123;</span><br><span class="line">    dataType_t *Addr;       //顺序表的首地址</span><br><span class="line">    unsigned int size;      //顺序表的容量</span><br><span class="line">    int last;               //顺序表的有效元素的下标</span><br><span class="line">&#125; sqList_t;</span><br></pre></td></tr></table></figure><h2 id="创建顺序表并对顺序表进行初始化（sqList-Create）"><a href="#创建顺序表并对顺序表进行初始化（sqList-Create）" class="headerlink" title="创建顺序表并对顺序表进行初始化（sqList_Create）"></a>创建顺序表并对顺序表进行初始化（sqList_Create）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">sqList_t *sqList_Create(unsigned int size)</span><br><span class="line">&#123;</span><br><span class="line">    //1.1 利用calloc为顺序表的管理结构体申请堆内存</span><br><span class="line">    sqList_t *manager = (sqList_t*)calloc(1,sizeof (manager));</span><br><span class="line"></span><br><span class="line">    if(NULL == manager)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;calloc memory for manager is failed&quot;);</span><br><span class="line">        exit(-1);       //程序终止</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //1.2 为所有元素申请堆内存 calloc,并完成错误处理</span><br><span class="line">    manager-&gt;Addr = (dataType_t*)calloc(size,sizeof(dataType_t));</span><br><span class="line"></span><br><span class="line">    if(NULL == manager-&gt;Addr)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;calloc memory for element is failed&quot;);</span><br><span class="line">        free(manager);  //释放内存</span><br><span class="line">        exit(-1);       //程序终止</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //1.3 对管理顺序表的结构体进行初始化（元素容量 最后元素下标）</span><br><span class="line">    manager-&gt;size = size; //对顺序表的容量进行初始化</span><br><span class="line">    manager-&gt;last = -1;   //由于顺序表为空，则最后元素下标初值为-1</span><br><span class="line"></span><br><span class="line">    return manager;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断顺序表是否以满（sqList-IsFull）"><a href="#判断顺序表是否以满（sqList-IsFull）" class="headerlink" title="判断顺序表是否以满（sqList_IsFull）"></a>判断顺序表是否以满（sqList_IsFull）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//判断顺序表是否以满</span><br><span class="line">bool sqList_IsFull(sqList_t *manager)</span><br><span class="line">&#123;</span><br><span class="line">    return (manager-&gt;last+1 == manager-&gt;size) ? true : false;</span><br><span class="line">//        if(manager-&gt;last+1 == manager-&gt;size)</span><br><span class="line">//    &#123;</span><br><span class="line">//        return ture;</span><br><span class="line">//    &#125;</span><br><span class="line">//    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="尾插（sqList-endAdd）"><a href="#尾插（sqList-endAdd）" class="headerlink" title="尾插（sqList_endAdd）"></a>尾插（sqList_endAdd）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//向顺序表的尾部插入元素</span><br><span class="line">bool sqList_endAdd (sqList_t *manager,dataType_t data)</span><br><span class="line">&#123;</span><br><span class="line">    //2.1 判断顺序表是否以满</span><br><span class="line">    if(sqList_IsFull(manager))</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;sequenceList is Full!\n&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //2.2 若顺序表有空闲空间，则把新元素添加到顺序表尾部</span><br><span class="line">/*    manager-&gt;last++;</span><br><span class="line">    *(manager-&gt;Addr + manager-&gt;last) = data;*/</span><br><span class="line">    manager-&gt;Addr[++manager-&gt;last] = data;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="头插（sqList-headAdd）"><a href="#头插（sqList-headAdd）" class="headerlink" title="头插（sqList_headAdd）"></a>头插（sqList_headAdd）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//3 向顺序表的头部插入元素</span><br><span class="line">bool sqList_headAdd (sqList_t *manager,dataType_t data)</span><br><span class="line">&#123;</span><br><span class="line">    //3.1 判断顺序表是否以满</span><br><span class="line">    if(sqList_IsFull(manager))</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;sequenceList is Full!\n&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //3.2 若顺序表有空闲空间，则把新元素添加到顺序表头部 顺序表中所以元素向后移动1个单位</span><br><span class="line">/*    manager-&gt;last++;</span><br><span class="line">    *(manager-&gt;Addr + manager-&gt;last) = data;*/</span><br><span class="line">    for(int i = manager-&gt;last;i &gt;= 0;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        manager-&gt;Addr[i+1] = manager-&gt;Addr[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //3.3 把新元素放到顺序表的头部,并且更新管理结构体中的元素下标+1</span><br><span class="line">    manager-&gt;Addr[0] = data;</span><br><span class="line">    manager-&gt;last++;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断顺序表是否为空（sqList-IsEmpty）"><a href="#判断顺序表是否为空（sqList-IsEmpty）" class="headerlink" title="判断顺序表是否为空（sqList_IsEmpty）"></a>判断顺序表是否为空（sqList_IsEmpty）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//判断顺序表是否为空</span><br><span class="line">bool sqList_IsEmpty(sqList_t *manager)</span><br><span class="line">&#123;</span><br><span class="line">    return (manager-&gt;last == -1) ? true : false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指定删除（sqList-delAdd）"><a href="#指定删除（sqList-delAdd）" class="headerlink" title="指定删除（sqList_delAdd）"></a>指定删除（sqList_delAdd）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">//4 向顺序表删除元素</span><br><span class="line">bool sqList_delAdd (sqList_t *manager,dataType_t destVal)</span><br><span class="line">&#123;</span><br><span class="line">    int temp=-1;     //记录需要删除的下标</span><br><span class="line"></span><br><span class="line">    //4.1 判断顺序表是否为空</span><br><span class="line">    if(sqList_IsEmpty(manager))</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;SequenceList is Empty!\n&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //4.2 需要查找目标值是否在顺序表中</span><br><span class="line">    for(int i=0;i &lt;= manager-&gt;last;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        //如果目标值与顺序表中的值相同</span><br><span class="line">        if(destVal == manager-&gt;Addr[i])</span><br><span class="line">        &#123;</span><br><span class="line">            temp=i;     //把目标元素的下标备份到变量temp中</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //4.3 如果顺序表中没有目标值的元素则终止函数</span><br><span class="line">    if(temp==-1)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;destval [%d] is not found\n&quot;,destVal);</span><br><span class="line">        return  false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //4.4 如果顺序表中有目标值的元素，则将该元素的后继元素向前移动一位</span><br><span class="line">    for (int i = temp; i &lt; manager-&gt;last; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        manager-&gt;Addr[i] = manager-&gt;Addr[i+1];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //4.5 由于删掉一个元素，则顺序表有效元素下标减一</span><br><span class="line">    manager-&gt;last--;</span><br><span class="line"></span><br><span class="line">    return true;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="遍历顺序表（sqList-print）"><a href="#遍历顺序表（sqList-print）" class="headerlink" title="遍历顺序表（sqList_print）"></a>遍历顺序表（sqList_print）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//5 遍历顺序表中的元素</span><br><span class="line">void sqList_print (sqList_t *manager)</span><br><span class="line">&#123;</span><br><span class="line">    for(int i=0;i&lt;=manager-&gt;last;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;Element[%d]=%d\n&quot;,i,manager-&gt;Addr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="main主程序"><a href="#main主程序" class="headerlink" title="main主程序"></a>main主程序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    //1 创建顺序表</span><br><span class="line">    sqList_t *manager = sqList_Create(10);</span><br><span class="line"></span><br><span class="line">    //2 向顺序表尾部插入新元素</span><br><span class="line">    sqList_endAdd (manager,5);</span><br><span class="line">    sqList_endAdd (manager,2);</span><br><span class="line">    sqList_endAdd (manager,1);</span><br><span class="line">    sqList_endAdd (manager,4);</span><br><span class="line">    sqList_endAdd (manager,6);</span><br><span class="line"></span><br><span class="line">    //3 遍历顺序表</span><br><span class="line">    sqList_print (manager);     //5 2 1 4 6</span><br><span class="line"></span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">    //4 向顺序表头部插入新元素</span><br><span class="line">    sqList_headAdd (manager,8);</span><br><span class="line">    sqList_headAdd (manager,4);</span><br><span class="line">    sqList_headAdd (manager,8);</span><br><span class="line">    sqList_headAdd (manager,8);</span><br><span class="line"></span><br><span class="line">    //5 遍历顺序表</span><br><span class="line">    sqList_print (manager);     //8 8 4 8 5 2 1 4 6</span><br><span class="line"></span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">    //6 删除顺序表中元素</span><br><span class="line">    sqList_delAdd (manager,20);</span><br><span class="line">    sqList_delAdd (manager,5);</span><br><span class="line">    sqList_delAdd (manager,1);</span><br><span class="line">    sqList_delAdd (manager,6);</span><br><span class="line"></span><br><span class="line">    //7 遍历顺序表</span><br><span class="line">    sqList_print (manager);     //8 8 4 8 2 4</span><br><span class="line"></span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Element[0]=5</span><br><span class="line">Element[1]=2</span><br><span class="line">Element[2]=1</span><br><span class="line">Element[3]=4</span><br><span class="line">Element[4]=6</span><br><span class="line"></span><br><span class="line">Element[0]=8</span><br><span class="line">Element[1]=8</span><br><span class="line">Element[2]=4</span><br><span class="line">Element[3]=8</span><br><span class="line">Element[4]=5</span><br><span class="line">Element[5]=2</span><br><span class="line">Element[6]=1</span><br><span class="line">Element[7]=4</span><br><span class="line">Element[8]=6</span><br><span class="line"></span><br><span class="line">destval [20] is not found</span><br><span class="line">Element[0]=8</span><br><span class="line">Element[1]=8</span><br><span class="line">Element[2]=4</span><br><span class="line">Element[3]=8</span><br><span class="line">Element[4]=2</span><br><span class="line">Element[5]=4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">进程已结束,退出代码0</span><br></pre></td></tr></table></figure><h2 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdbool.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">//类型别名</span><br><span class="line">typedef int dataType_t;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">//构造顺序表记录参数(顺序表的首地址 顺序表的容量 顺序表的有效元素的下标)</span><br><span class="line">typedef struct sequenceList &#123;</span><br><span class="line">    dataType_t *Addr;       //顺序表的首地址</span><br><span class="line">    unsigned int size;      //顺序表的容量</span><br><span class="line">    int last;               //顺序表的有效元素的下标</span><br><span class="line">&#125; sqList_t;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">//1 创建顺序表并对顺序表进行初始化</span><br><span class="line">sqList_t *sqList_Create(unsigned int size)</span><br><span class="line">&#123;</span><br><span class="line">    //1.1 利用calloc为顺序表的管理结构体申请堆内存</span><br><span class="line">    sqList_t *manager = (sqList_t*)calloc(1,sizeof (manager));</span><br><span class="line"></span><br><span class="line">    if(NULL == manager)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;calloc memory for manager is failed&quot;);</span><br><span class="line">        exit(-1);       //程序终止</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //1.2 为所有元素申请堆内存 calloc,并完成错误处理</span><br><span class="line">    manager-&gt;Addr = (dataType_t*)calloc(size,sizeof(dataType_t));</span><br><span class="line"></span><br><span class="line">    if(NULL == manager-&gt;Addr)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(&quot;calloc memory for element is failed&quot;);</span><br><span class="line">        free(manager);  //释放内存</span><br><span class="line">        exit(-1);       //程序终止</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //1.3 对管理顺序表的结构体进行初始化（元素容量 最后元素下标）</span><br><span class="line">    manager-&gt;size = size; //对顺序表的容量进行初始化</span><br><span class="line">    manager-&gt;last = -1;   //由于顺序表为空，则最后元素下标初值为-1</span><br><span class="line"></span><br><span class="line">    return manager;</span><br><span class="line">&#125;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">//判断顺序表是否以满</span><br><span class="line">bool sqList_IsFull(sqList_t *manager)</span><br><span class="line">&#123;</span><br><span class="line">    return (manager-&gt;last+1 == manager-&gt;size) ? true : false;</span><br><span class="line">//        if(manager-&gt;last+1 == manager-&gt;size)</span><br><span class="line">//    &#123;</span><br><span class="line">//        return ture;</span><br><span class="line">//    &#125;</span><br><span class="line">//    return false;</span><br><span class="line">&#125;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">//2 向顺序表的尾部插入元素</span><br><span class="line">bool sqList_endAdd (sqList_t *manager,dataType_t data)</span><br><span class="line">&#123;</span><br><span class="line">    //2.1 判断顺序表是否以满</span><br><span class="line">    if(sqList_IsFull(manager))</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;sequenceList is Full!\n&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //2.2 若顺序表有空闲空间，则把新元素添加到顺序表尾部</span><br><span class="line">/*    manager-&gt;last++;</span><br><span class="line">    *(manager-&gt;Addr + manager-&gt;last) = data;*/</span><br><span class="line">    manager-&gt;Addr[++manager-&gt;last] = data;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">//3 向顺序表的头部插入元素</span><br><span class="line">bool sqList_headAdd (sqList_t *manager,dataType_t data)</span><br><span class="line">&#123;</span><br><span class="line">    //3.1 判断顺序表是否以满</span><br><span class="line">    if(sqList_IsFull(manager))</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;sequenceList is Full!\n&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //3.2 若顺序表有空闲空间，则把新元素添加到顺序表头部 顺序表中所以元素向后移动1个单位</span><br><span class="line">/*    manager-&gt;last++;</span><br><span class="line">    *(manager-&gt;Addr + manager-&gt;last) = data;*/</span><br><span class="line">    for(int i = manager-&gt;last;i &gt;= 0;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        manager-&gt;Addr[i+1] = manager-&gt;Addr[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //3.3 把新元素放到顺序表的头部,并且更新管理结构体中的元素下标+1</span><br><span class="line">    manager-&gt;Addr[0] = data;</span><br><span class="line">    manager-&gt;last++;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">//判断顺序表是否为空</span><br><span class="line">bool sqList_IsEmpty(sqList_t *manager)</span><br><span class="line">&#123;</span><br><span class="line">    return (manager-&gt;last == -1) ? true : false;</span><br><span class="line">&#125;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">//4 向顺序表删除元素</span><br><span class="line">bool sqList_delAdd (sqList_t *manager,dataType_t destVal)</span><br><span class="line">&#123;</span><br><span class="line">    int temp=-1;     //记录需要删除的下标</span><br><span class="line"></span><br><span class="line">    //4.1 判断顺序表是否为空</span><br><span class="line">    if(sqList_IsEmpty(manager))</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;SequenceList is Empty!\n&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //4.2 需要查找目标值是否在顺序表中</span><br><span class="line">    for(int i=0;i &lt;= manager-&gt;last;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        //如果目标值与顺序表中的值相同</span><br><span class="line">        if(destVal == manager-&gt;Addr[i])</span><br><span class="line">        &#123;</span><br><span class="line">            temp=i;     //把目标元素的下标备份到变量temp中</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //4.3 如果顺序表中没有目标值的元素则终止函数</span><br><span class="line">    if(temp==-1)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;destval [%d] is not found\n&quot;,destVal);</span><br><span class="line">        return  false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //4.4 如果顺序表中有目标值的元素，则将该元素的后继元素向前移动一位</span><br><span class="line">    for (int i = temp; i &lt; manager-&gt;last; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        manager-&gt;Addr[i] = manager-&gt;Addr[i+1];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //4.5 由于删掉一个元素，则顺序表有效元素下标减一</span><br><span class="line">    manager-&gt;last--;</span><br><span class="line"></span><br><span class="line">    return true;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">//5 遍历顺序表中的元素</span><br><span class="line">void sqList_print (sqList_t *manager)</span><br><span class="line">&#123;</span><br><span class="line">    for(int i=0;i&lt;=manager-&gt;last;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;Element[%d]=%d\n&quot;,i,manager-&gt;Addr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    //1 创建顺序表</span><br><span class="line">    sqList_t *manager = sqList_Create(10);</span><br><span class="line"></span><br><span class="line">    //2 向顺序表尾部插入新元素</span><br><span class="line">    sqList_endAdd (manager,5);</span><br><span class="line">    sqList_endAdd (manager,2);</span><br><span class="line">    sqList_endAdd (manager,1);</span><br><span class="line">    sqList_endAdd (manager,4);</span><br><span class="line">    sqList_endAdd (manager,6);</span><br><span class="line"></span><br><span class="line">    //3 遍历顺序表</span><br><span class="line">    sqList_print (manager);     //5 2 1 4 6</span><br><span class="line"></span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">    //4 向顺序表头部插入新元素</span><br><span class="line">    sqList_headAdd (manager,8);</span><br><span class="line">    sqList_headAdd (manager,4);</span><br><span class="line">    sqList_headAdd (manager,8);</span><br><span class="line">    sqList_headAdd (manager,8);</span><br><span class="line"></span><br><span class="line">    //5 遍历顺序表</span><br><span class="line">    sqList_print (manager);     //8 8 4 8 5 2 1 4 6</span><br><span class="line"></span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">    //6 删除顺序表中元素</span><br><span class="line">    sqList_delAdd (manager,20);</span><br><span class="line">    sqList_delAdd (manager,5);</span><br><span class="line">    sqList_delAdd (manager,1);</span><br><span class="line">    sqList_delAdd (manager,6);</span><br><span class="line"></span><br><span class="line">    //7 遍历顺序表</span><br><span class="line">    sqList_print (manager);     //8 8 4 8 2 4</span><br><span class="line"></span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构—顺序表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/03/21/hello-world/"/>
      <url>/2025/03/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
